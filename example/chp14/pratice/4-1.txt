#範例4-1:建立非線性迴歸模型來預測（用sylearn模組建立，複雜5步驟）
# 題目：請做預測，當美元=29.75，黃金的價位=？

#參考：https://www.books.com.tw/products/0010876198，第8-1章
#參考：https://zhuanlan.zhihu.com/p/53977691
#參考：https://www.796t.com/content/1547740263.html

#重點1：建立2組數據的非線性迴歸數學模型，有2種方法
#（1）用numpy模組：最簡單
#（2）用sylearn模組(sci-kit learn)

#重點3：建立非線性迴歸的模型sklearn model方法：（5步驟）
##步驟1：先建立數學模型（多項式）
#import sklearn.preprocessing as prep
# 2次方多項式model
#model = prep.PolynomialFeatures(degree=2)

#步驟2：將變數x(df['美元'])==>轉成多項式的各種特徵變數 ==> x_poly = [x1, x2, x1x2, x1^2, x2^2]
#說明示意圖：https://acupun.site/lecture/predict/example/chp4/pratice/4-1-1.PNG
# x = df['美元'] ===> 轉換成 x_poly特徵變數
#x_poly = model.fit_transform(df['美元'].to_frame())

#步驟3：再建立『線性』數學模型model2 ==> y = f(x_poly)
#import sklearn.linear_model as lm
#model2 = lm.LinearRegression()

#步驟4：讓模型model學習歷史數據(x_poly， df['黃金'])
# 學習指令：model2.fit(dataframeX, dataframeY)
# 範例：model2.fit(x_poly, df['黃金'].to_frame())
# 資料結構：df['美元'] => series
# 資料結構：df['美元'].to_frame() => dataframe
#model2.fit(x_poly, df['黃金'].to_frame())

#步驟5：進行預測（當美元=29.75，黃金的價位=？）
# 預測指令：model2.predict(x_poly)
# 範例：model2.predict(model.fit_transform([[29.75]]))
# 美元=29.75的dataframe =》 [[29.75]]
#print('當美元=29.75，黃金的價位 = ', model2.predict(model.fit_transform([[29.75]])))

#excel檔案：https://acupun.site/lecture/predict/example/chp1/usd-gold.xlsx

#--------------------------------------
#（1）讀入檔案
#--------------------------------------
import pandas as pd
df = pd.read_excel("https://acupun.site/lecture/predict/example/chp1/usd-gold.xlsx", "美元黃金對應")
print(df.head(3))

#--------------------------------------
#（2）建立非線性迴歸的模型sklearn model方法：（5步驟）
#--------------------------------------
#步驟1：先建立數學模型（多項式）
import sklearn.preprocessing as prep
# 2次方多項式model
model = prep.PolynomialFeatures(degree=2)

#步驟2：將變數x(df['美元'])==>轉成多項式的各種特徵變數 ==> x_poly = [x1, x2, x1x2, x1^2, x2^2]
#說明示意圖：https://acupun.site/lecture/predict/example/chp4/pratice/4-1-1.PNG
# x = df['美元'] ===> 轉換成 x_poly特徵變數
x_poly = model.fit_transform(df['美元'].to_frame())

#步驟3：再建立『線性』數學模型model2 ==> y = f(x_poly)
import sklearn.linear_model as lm
model2 = lm.LinearRegression()

#步驟4：讓模型model學習歷史數據(x_poly， df['黃金'])
# 學習指令：model2.fit(dataframeX, dataframeY)
# 範例：model2.fit(x_poly, df['黃金'].to_frame())
# 資料結構：df['美元'] => series
# 資料結構：df['美元'].to_frame() => dataframe
model2.fit(x_poly, df['黃金'].to_frame())
print(model2)

#步驟5：進行預測（當美元=29.75，黃金的價位=？）
# 預測指令：model2.predict(x_poly)
# 範例：model2.predict(model.fit_transform([[29.75]]))
# 美元=29.75的dataframe =》 [[29.75]]
print('當美元=29.75，黃金的價位 = ', model2.predict(model.fit_transform([[29.75]])))

#--------------------------------------
#（3）繪圖：數據散佈圖 + 迴歸線圖
#--------------------------------------
import matplotlib.pyplot as plt

ax1 = df.plot(kind='scatter', x='美元', y='黃金')
df['預測'] = model2.predict(model.fit_transform(df['美元'].to_frame()))
df.plot(kind='line', x='美元', y='預測', color='red', ax=ax1)
plt.show()
